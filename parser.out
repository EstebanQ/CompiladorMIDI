Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> principal
Rule 1     principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST song structureSong
Rule 2     principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST improv structureImprovisation
Rule 3     song -> SONG COLON notesLines
Rule 4     notesLines -> notesLine notesLines
Rule 5     notesLines -> notesLine
Rule 6     notesLine -> notes LBRACKET ICONST RBRACKET
Rule 7     notes -> note notes
Rule 8     notes -> note
Rule 9     note -> NCONST LPAREN ICONST COMMA ICONST RPAREN
Rule 10    note -> NCONST LPAREN ICONST COMMA FCONST RPAREN
Rule 11    improv -> IMPROVISATION LPAREN KCONST RPAREN COLON degreeLines
Rule 12    degreeLines -> degreeLine degreeLines
Rule 13    degreeLines -> degreeLine
Rule 14    degreeLine -> degrees LBRACKET ICONST RBRACKET
Rule 15    degrees -> degree degree
Rule 16    degrees -> degree
Rule 17    degree -> ICONST
Rule 18    structureSong -> STRUCTURE LBRACE repeatSong RBRACE
Rule 19    structureImprovisation -> STRUCTURE LBRACE repeatImprovisation RBRACE
Rule 20    repeatSong -> repeatValuesSong COMMA repeatSong
Rule 21    repeatSong -> repeatValuesSong
Rule 22    repeatValuesSong -> ICONST LPAREN ICONST COMMA ICONST RPAREN
Rule 23    repeatImprovisation -> repeatValuesImprovisation COMMA repeatImprovisation
Rule 24    repeatImprovisation -> repeatValuesImprovisation
Rule 25    repeatValuesImprovisation -> ICONST LPAREN ICONST RPAREN

Terminals, with rules where they appear

AUTHOR               : 1 2
COLON                : 3 11
COMMA                : 9 10 20 22 23
FCONST               : 10
FILENAME             : 1 2
ICONST               : 1 2 6 9 9 10 14 17 22 22 22 25 25
IMPROVISATION        : 11
INSTRUMENT           : 1 2
KCONST               : 11
LBRACE               : 18 19
LBRACKET             : 6 14
LPAREN               : 9 10 11 22 25
NCONST               : 9 10
RBRACE               : 18 19
RBRACKET             : 6 14
RPAREN               : 9 10 11 22 25
SCONST               : 1 1 2 2
SONG                 : 3
STRUCTURE            : 18 19
error                : 

Nonterminals, with rules where they appear

degree               : 15 15 16
degreeLine           : 12 13
degreeLines          : 11 12
degrees              : 14
improv               : 2
note                 : 7 8
notes                : 6 7
notesLine            : 4 5
notesLines           : 3 4
principal            : 0
repeatImprovisation  : 19 23
repeatSong           : 18 20
repeatValuesImprovisation : 23 24
repeatValuesSong     : 20 21
song                 : 1
structureImprovisation : 2
structureSong        : 1

Parsing method: LALR

state 0

    (0) S' -> . principal
    (1) principal -> . FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST song structureSong
    (2) principal -> . FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST improv structureImprovisation

    FILENAME        shift and go to state 2

    principal                      shift and go to state 1

state 1

    (0) S' -> principal .



state 2

    (1) principal -> FILENAME . SCONST AUTHOR SCONST INSTRUMENT ICONST song structureSong
    (2) principal -> FILENAME . SCONST AUTHOR SCONST INSTRUMENT ICONST improv structureImprovisation

    SCONST          shift and go to state 3


state 3

    (1) principal -> FILENAME SCONST . AUTHOR SCONST INSTRUMENT ICONST song structureSong
    (2) principal -> FILENAME SCONST . AUTHOR SCONST INSTRUMENT ICONST improv structureImprovisation

    AUTHOR          shift and go to state 4


state 4

    (1) principal -> FILENAME SCONST AUTHOR . SCONST INSTRUMENT ICONST song structureSong
    (2) principal -> FILENAME SCONST AUTHOR . SCONST INSTRUMENT ICONST improv structureImprovisation

    SCONST          shift and go to state 5


state 5

    (1) principal -> FILENAME SCONST AUTHOR SCONST . INSTRUMENT ICONST song structureSong
    (2) principal -> FILENAME SCONST AUTHOR SCONST . INSTRUMENT ICONST improv structureImprovisation

    INSTRUMENT      shift and go to state 6


state 6

    (1) principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT . ICONST song structureSong
    (2) principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT . ICONST improv structureImprovisation

    ICONST          shift and go to state 7


state 7

    (1) principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST . song structureSong
    (2) principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST . improv structureImprovisation
    (3) song -> . SONG COLON notesLines
    (11) improv -> . IMPROVISATION LPAREN KCONST RPAREN COLON degreeLines

    SONG            shift and go to state 10
    IMPROVISATION   shift and go to state 11

    improv                         shift and go to state 8
    song                           shift and go to state 9

state 8

    (2) principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST improv . structureImprovisation
    (19) structureImprovisation -> . STRUCTURE LBRACE repeatImprovisation RBRACE

    STRUCTURE       shift and go to state 13

    structureImprovisation         shift and go to state 12

state 9

    (1) principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST song . structureSong
    (18) structureSong -> . STRUCTURE LBRACE repeatSong RBRACE

    STRUCTURE       shift and go to state 15

    structureSong                  shift and go to state 14

state 10

    (3) song -> SONG . COLON notesLines

    COLON           shift and go to state 16


state 11

    (11) improv -> IMPROVISATION . LPAREN KCONST RPAREN COLON degreeLines

    LPAREN          shift and go to state 17


state 12

    (2) principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST improv structureImprovisation .

    $end            reduce using rule 2 (principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST improv structureImprovisation .)


state 13

    (19) structureImprovisation -> STRUCTURE . LBRACE repeatImprovisation RBRACE

    LBRACE          shift and go to state 18


state 14

    (1) principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST song structureSong .

    $end            reduce using rule 1 (principal -> FILENAME SCONST AUTHOR SCONST INSTRUMENT ICONST song structureSong .)


state 15

    (18) structureSong -> STRUCTURE . LBRACE repeatSong RBRACE

    LBRACE          shift and go to state 19


state 16

    (3) song -> SONG COLON . notesLines
    (4) notesLines -> . notesLine notesLines
    (5) notesLines -> . notesLine
    (6) notesLine -> . notes LBRACKET ICONST RBRACKET
    (7) notes -> . note notes
    (8) notes -> . note
    (9) note -> . NCONST LPAREN ICONST COMMA ICONST RPAREN
    (10) note -> . NCONST LPAREN ICONST COMMA FCONST RPAREN

    NCONST          shift and go to state 22

    notesLines                     shift and go to state 21
    notesLine                      shift and go to state 23
    note                           shift and go to state 20
    notes                          shift and go to state 24

state 17

    (11) improv -> IMPROVISATION LPAREN . KCONST RPAREN COLON degreeLines

    KCONST          shift and go to state 25


state 18

    (19) structureImprovisation -> STRUCTURE LBRACE . repeatImprovisation RBRACE
    (23) repeatImprovisation -> . repeatValuesImprovisation COMMA repeatImprovisation
    (24) repeatImprovisation -> . repeatValuesImprovisation
    (25) repeatValuesImprovisation -> . ICONST LPAREN ICONST RPAREN

    ICONST          shift and go to state 27

    repeatImprovisation            shift and go to state 26
    repeatValuesImprovisation      shift and go to state 28

state 19

    (18) structureSong -> STRUCTURE LBRACE . repeatSong RBRACE
    (20) repeatSong -> . repeatValuesSong COMMA repeatSong
    (21) repeatSong -> . repeatValuesSong
    (22) repeatValuesSong -> . ICONST LPAREN ICONST COMMA ICONST RPAREN

    ICONST          shift and go to state 29

    repeatValuesSong               shift and go to state 31
    repeatSong                     shift and go to state 30

state 20

    (7) notes -> note . notes
    (8) notes -> note .
    (7) notes -> . note notes
    (8) notes -> . note
    (9) note -> . NCONST LPAREN ICONST COMMA ICONST RPAREN
    (10) note -> . NCONST LPAREN ICONST COMMA FCONST RPAREN

    LBRACKET        reduce using rule 8 (notes -> note .)
    NCONST          shift and go to state 22

    note                           shift and go to state 20
    notes                          shift and go to state 32

state 21

    (3) song -> SONG COLON notesLines .

    STRUCTURE       reduce using rule 3 (song -> SONG COLON notesLines .)


state 22

    (9) note -> NCONST . LPAREN ICONST COMMA ICONST RPAREN
    (10) note -> NCONST . LPAREN ICONST COMMA FCONST RPAREN

    LPAREN          shift and go to state 33


state 23

    (4) notesLines -> notesLine . notesLines
    (5) notesLines -> notesLine .
    (4) notesLines -> . notesLine notesLines
    (5) notesLines -> . notesLine
    (6) notesLine -> . notes LBRACKET ICONST RBRACKET
    (7) notes -> . note notes
    (8) notes -> . note
    (9) note -> . NCONST LPAREN ICONST COMMA ICONST RPAREN
    (10) note -> . NCONST LPAREN ICONST COMMA FCONST RPAREN

    STRUCTURE       reduce using rule 5 (notesLines -> notesLine .)
    NCONST          shift and go to state 22

    notesLine                      shift and go to state 23
    notesLines                     shift and go to state 34
    note                           shift and go to state 20
    notes                          shift and go to state 24

state 24

    (6) notesLine -> notes . LBRACKET ICONST RBRACKET

    LBRACKET        shift and go to state 35


state 25

    (11) improv -> IMPROVISATION LPAREN KCONST . RPAREN COLON degreeLines

    RPAREN          shift and go to state 36


state 26

    (19) structureImprovisation -> STRUCTURE LBRACE repeatImprovisation . RBRACE

    RBRACE          shift and go to state 37


state 27

    (25) repeatValuesImprovisation -> ICONST . LPAREN ICONST RPAREN

    LPAREN          shift and go to state 38


state 28

    (23) repeatImprovisation -> repeatValuesImprovisation . COMMA repeatImprovisation
    (24) repeatImprovisation -> repeatValuesImprovisation .

    COMMA           shift and go to state 39
    RBRACE          reduce using rule 24 (repeatImprovisation -> repeatValuesImprovisation .)


state 29

    (22) repeatValuesSong -> ICONST . LPAREN ICONST COMMA ICONST RPAREN

    LPAREN          shift and go to state 40


state 30

    (18) structureSong -> STRUCTURE LBRACE repeatSong . RBRACE

    RBRACE          shift and go to state 41


state 31

    (20) repeatSong -> repeatValuesSong . COMMA repeatSong
    (21) repeatSong -> repeatValuesSong .

    COMMA           shift and go to state 42
    RBRACE          reduce using rule 21 (repeatSong -> repeatValuesSong .)


state 32

    (7) notes -> note notes .

    LBRACKET        reduce using rule 7 (notes -> note notes .)


state 33

    (9) note -> NCONST LPAREN . ICONST COMMA ICONST RPAREN
    (10) note -> NCONST LPAREN . ICONST COMMA FCONST RPAREN

    ICONST          shift and go to state 43


state 34

    (4) notesLines -> notesLine notesLines .

    STRUCTURE       reduce using rule 4 (notesLines -> notesLine notesLines .)


state 35

    (6) notesLine -> notes LBRACKET . ICONST RBRACKET

    ICONST          shift and go to state 44


state 36

    (11) improv -> IMPROVISATION LPAREN KCONST RPAREN . COLON degreeLines

    COLON           shift and go to state 45


state 37

    (19) structureImprovisation -> STRUCTURE LBRACE repeatImprovisation RBRACE .

    $end            reduce using rule 19 (structureImprovisation -> STRUCTURE LBRACE repeatImprovisation RBRACE .)


state 38

    (25) repeatValuesImprovisation -> ICONST LPAREN . ICONST RPAREN

    ICONST          shift and go to state 46


state 39

    (23) repeatImprovisation -> repeatValuesImprovisation COMMA . repeatImprovisation
    (23) repeatImprovisation -> . repeatValuesImprovisation COMMA repeatImprovisation
    (24) repeatImprovisation -> . repeatValuesImprovisation
    (25) repeatValuesImprovisation -> . ICONST LPAREN ICONST RPAREN

    ICONST          shift and go to state 27

    repeatImprovisation            shift and go to state 47
    repeatValuesImprovisation      shift and go to state 28

state 40

    (22) repeatValuesSong -> ICONST LPAREN . ICONST COMMA ICONST RPAREN

    ICONST          shift and go to state 48


state 41

    (18) structureSong -> STRUCTURE LBRACE repeatSong RBRACE .

    $end            reduce using rule 18 (structureSong -> STRUCTURE LBRACE repeatSong RBRACE .)


state 42

    (20) repeatSong -> repeatValuesSong COMMA . repeatSong
    (20) repeatSong -> . repeatValuesSong COMMA repeatSong
    (21) repeatSong -> . repeatValuesSong
    (22) repeatValuesSong -> . ICONST LPAREN ICONST COMMA ICONST RPAREN

    ICONST          shift and go to state 29

    repeatValuesSong               shift and go to state 31
    repeatSong                     shift and go to state 49

state 43

    (9) note -> NCONST LPAREN ICONST . COMMA ICONST RPAREN
    (10) note -> NCONST LPAREN ICONST . COMMA FCONST RPAREN

    COMMA           shift and go to state 50


state 44

    (6) notesLine -> notes LBRACKET ICONST . RBRACKET

    RBRACKET        shift and go to state 51


state 45

    (11) improv -> IMPROVISATION LPAREN KCONST RPAREN COLON . degreeLines
    (12) degreeLines -> . degreeLine degreeLines
    (13) degreeLines -> . degreeLine
    (14) degreeLine -> . degrees LBRACKET ICONST RBRACKET
    (15) degrees -> . degree degree
    (16) degrees -> . degree
    (17) degree -> . ICONST

    ICONST          shift and go to state 55

    degreeLine                     shift and go to state 52
    degrees                        shift and go to state 53
    degreeLines                    shift and go to state 56
    degree                         shift and go to state 54

state 46

    (25) repeatValuesImprovisation -> ICONST LPAREN ICONST . RPAREN

    RPAREN          shift and go to state 57


state 47

    (23) repeatImprovisation -> repeatValuesImprovisation COMMA repeatImprovisation .

    RBRACE          reduce using rule 23 (repeatImprovisation -> repeatValuesImprovisation COMMA repeatImprovisation .)


state 48

    (22) repeatValuesSong -> ICONST LPAREN ICONST . COMMA ICONST RPAREN

    COMMA           shift and go to state 58


state 49

    (20) repeatSong -> repeatValuesSong COMMA repeatSong .

    RBRACE          reduce using rule 20 (repeatSong -> repeatValuesSong COMMA repeatSong .)


state 50

    (9) note -> NCONST LPAREN ICONST COMMA . ICONST RPAREN
    (10) note -> NCONST LPAREN ICONST COMMA . FCONST RPAREN

    ICONST          shift and go to state 60
    FCONST          shift and go to state 59


state 51

    (6) notesLine -> notes LBRACKET ICONST RBRACKET .

    NCONST          reduce using rule 6 (notesLine -> notes LBRACKET ICONST RBRACKET .)
    STRUCTURE       reduce using rule 6 (notesLine -> notes LBRACKET ICONST RBRACKET .)


state 52

    (12) degreeLines -> degreeLine . degreeLines
    (13) degreeLines -> degreeLine .
    (12) degreeLines -> . degreeLine degreeLines
    (13) degreeLines -> . degreeLine
    (14) degreeLine -> . degrees LBRACKET ICONST RBRACKET
    (15) degrees -> . degree degree
    (16) degrees -> . degree
    (17) degree -> . ICONST

    STRUCTURE       reduce using rule 13 (degreeLines -> degreeLine .)
    ICONST          shift and go to state 55

    degreeLine                     shift and go to state 52
    degrees                        shift and go to state 53
    degreeLines                    shift and go to state 61
    degree                         shift and go to state 54

state 53

    (14) degreeLine -> degrees . LBRACKET ICONST RBRACKET

    LBRACKET        shift and go to state 62


state 54

    (15) degrees -> degree . degree
    (16) degrees -> degree .
    (17) degree -> . ICONST

    LBRACKET        reduce using rule 16 (degrees -> degree .)
    ICONST          shift and go to state 55

    degree                         shift and go to state 63

state 55

    (17) degree -> ICONST .

    ICONST          reduce using rule 17 (degree -> ICONST .)
    LBRACKET        reduce using rule 17 (degree -> ICONST .)


state 56

    (11) improv -> IMPROVISATION LPAREN KCONST RPAREN COLON degreeLines .

    STRUCTURE       reduce using rule 11 (improv -> IMPROVISATION LPAREN KCONST RPAREN COLON degreeLines .)


state 57

    (25) repeatValuesImprovisation -> ICONST LPAREN ICONST RPAREN .

    COMMA           reduce using rule 25 (repeatValuesImprovisation -> ICONST LPAREN ICONST RPAREN .)
    RBRACE          reduce using rule 25 (repeatValuesImprovisation -> ICONST LPAREN ICONST RPAREN .)


state 58

    (22) repeatValuesSong -> ICONST LPAREN ICONST COMMA . ICONST RPAREN

    ICONST          shift and go to state 64


state 59

    (10) note -> NCONST LPAREN ICONST COMMA FCONST . RPAREN

    RPAREN          shift and go to state 65


state 60

    (9) note -> NCONST LPAREN ICONST COMMA ICONST . RPAREN

    RPAREN          shift and go to state 66


state 61

    (12) degreeLines -> degreeLine degreeLines .

    STRUCTURE       reduce using rule 12 (degreeLines -> degreeLine degreeLines .)


state 62

    (14) degreeLine -> degrees LBRACKET . ICONST RBRACKET

    ICONST          shift and go to state 67


state 63

    (15) degrees -> degree degree .

    LBRACKET        reduce using rule 15 (degrees -> degree degree .)


state 64

    (22) repeatValuesSong -> ICONST LPAREN ICONST COMMA ICONST . RPAREN

    RPAREN          shift and go to state 68


state 65

    (10) note -> NCONST LPAREN ICONST COMMA FCONST RPAREN .

    NCONST          reduce using rule 10 (note -> NCONST LPAREN ICONST COMMA FCONST RPAREN .)
    LBRACKET        reduce using rule 10 (note -> NCONST LPAREN ICONST COMMA FCONST RPAREN .)


state 66

    (9) note -> NCONST LPAREN ICONST COMMA ICONST RPAREN .

    NCONST          reduce using rule 9 (note -> NCONST LPAREN ICONST COMMA ICONST RPAREN .)
    LBRACKET        reduce using rule 9 (note -> NCONST LPAREN ICONST COMMA ICONST RPAREN .)


state 67

    (14) degreeLine -> degrees LBRACKET ICONST . RBRACKET

    RBRACKET        shift and go to state 69


state 68

    (22) repeatValuesSong -> ICONST LPAREN ICONST COMMA ICONST RPAREN .

    COMMA           reduce using rule 22 (repeatValuesSong -> ICONST LPAREN ICONST COMMA ICONST RPAREN .)
    RBRACE          reduce using rule 22 (repeatValuesSong -> ICONST LPAREN ICONST COMMA ICONST RPAREN .)


state 69

    (14) degreeLine -> degrees LBRACKET ICONST RBRACKET .

    ICONST          reduce using rule 14 (degreeLine -> degrees LBRACKET ICONST RBRACKET .)
    STRUCTURE       reduce using rule 14 (degreeLine -> degrees LBRACKET ICONST RBRACKET .)

